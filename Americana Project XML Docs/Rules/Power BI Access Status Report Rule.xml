<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sailpoint PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<sailpoint>
<Rule language="beanshell" name="Power BI Access Status Report Rule" type="AllowedValues">
  <Description>This rule is configured on the application and is called after the connector has build a ResourceObject from the native application data.

Initially designed for non-rule based connectors to add SPPrivileged flag to an object, but could be used to do any transformations.</Description>
  <Signature returnType="ResourceObject">
    <Inputs>
      <Argument name="log">
        <Description>
          The log object associated with the SailPointContext.
        </Description>
      </Argument>
      <Argument name="context">
        <Description>
          A sailpoint.api.SailPointContext object that can be used to query the database if necessary.
        </Description>
      </Argument>
      <Argument name="object">
        <Description>
          The ResourceObject built by the connector.
        </Description>
      </Argument>
      <Argument name="application">
        <Description>
          Application that references the connector.
        </Description>
      </Argument>
      <Argument name="connector">
        <Description>
          The connector object.
        </Description>
      </Argument>
      <Argument name="state">
        <Description>
          A Map containing state information.
        </Description>
      </Argument>
    </Inputs>
    <Returns>
      <Argument name="resourceObject">
        <Description>
          The updated resource object.
        </Description>
      </Argument>
    </Returns>
  </Signature>
  <Source>
import com.lowagie.text.*;
import com.lowagie.text.Font;
import com.lowagie.text.pdf.PdfPCell;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;
import sailpoint.object.*;
import org.joda.time.DateTime;
import java.awt.*;
import java.io.File;
import org.apache.commons.lang.StringUtils;  
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.HashMap;  
  
  String tskSuccess="Failed";
	Date todaydate = new Date();
  SimpleDateFormat formatter = new SimpleDateFormat("MM-dd-yyyy hh.mm aa");
  SimpleDateFormat df = new SimpleDateFormat("M/dd/yy");
  String reportdate = formatter.format(todaydate);
  String strdf = df.format(todaydate);
  Date dateago = new DateTime(todaydate).minusDays(46).toDate();
  String strDateago = df.format(dateago);
  Date filterfromDate = new SimpleDateFormat("M/dd/yy").parse(strDateago);
  String filepath = "E:\\PowerBITaskReport\\PowerBIFailedTaskReport-"+reportdate+".pdf";
  File reportfile = new File(filepath);
  if(!reportfile.exists())
    reportfile.createNewFile();
  FileOutputStream fos = new FileOutputStream(reportfile);

try{
  QueryOptions qo = new QueryOptions();
  //Filter filter = Filter.and(Filter.ge("TaskResult.completed",dateago),Filter.ne("TaskResult.type","System"),Filter.eq("TaskResult.completionStatus","Error"),Filter.like("TaskResult.name","QuickLink Launch for identity",Filter.MatchMode.START));
  Filter filter = Filter.and(Filter.ge("TaskResult.completed",dateago),Filter.ne("TaskResult.type","System"),Filter.like("TaskResult.name","QuickLink Launch for identity",Filter.MatchMode.START));
  qo.addFilter(filter);
  qo.addOrdering("TaskResult.name",true);
  List taskresultObj = (List)context.getObjects(TaskResult.class,qo);
  Document document = new Document(PageSize.A4.rotate());
  PdfWriter.getInstance(document, fos);
  document.open();

  Font headingFont = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 12);
  headingFont.setColor(new Color(0, 102, 204));
  Paragraph heading = new Paragraph("Power BI Access Request Report: "+strDateago+" To "+strdf, headingFont);
  heading.setAlignment(Paragraph.ALIGN_CENTER);
  document.add(heading);
  document.add(Chunk.NEWLINE);
  PdfPTable table = new PdfPTable(8);
  Font theaderFont = FontFactory.getFont(FontFactory.HELVETICA, 10,Font.BOLD, Color.WHITE);
  Font bodyFont = FontFactory.getFont(FontFactory.HELVETICA, 9,Font.NORMAL, Color.BLACK);
  Font successFont = FontFactory.getFont(FontFactory.HELVETICA, 9,Font.NORMAL, Color.GREEN);
  Font errorFont = FontFactory.getFont(FontFactory.HELVETICA, 9,Font.NORMAL, Color.RED);
  PdfPCell requestcell = new PdfPCell(new Phrase("Request",theaderFont));
  requestcell.setBackgroundColor(new Color(0, 0, 255));
  table.addCell(requestcell);
  PdfPCell requestercell = new PdfPCell(new Phrase("Requester",theaderFont));
  requestercell.setBackgroundColor(new Color(0, 0, 255));
  table.addCell(requestercell);
  PdfPCell approvercell = new PdfPCell(new Phrase("Approver",theaderFont));
  approvercell.setBackgroundColor(new Color(0, 0, 255));
  table.addCell(approvercell);
  PdfPCell rdatecell = new PdfPCell(new Phrase("Requested Date",theaderFont));
  rdatecell.setBackgroundColor(new Color(0, 0, 255));
  table.addCell(rdatecell);
  PdfPCell statuscell = new PdfPCell(new Phrase("Completion Status",theaderFont));
  statuscell.setBackgroundColor(new Color(0, 0, 255));
  table.addCell(statuscell);
  PdfPCell errorcell = new PdfPCell(new Phrase("Error",theaderFont));
  errorcell.setBackgroundColor(new Color(0, 0, 255));
  table.addCell(errorcell);
  PdfPCell cStepcell = new PdfPCell(new Phrase("Current Step",theaderFont));
  cStepcell.setBackgroundColor(new Color(0, 0, 255));
  table.addCell(cStepcell);
  PdfPCell statecell = new PdfPCell(new Phrase("State",theaderFont));
  statecell.setBackgroundColor(new Color(0, 0, 255));
  table.addCell(statecell);
  table.setHeaderRows(1);

  for (TaskResult tr : taskresultObj){
    TaskResult tasktrBi =context.getObjectByName(TaskResult.class,tr.getName());
    if(tasktrBi != null){
      String requester = null;
      String completionStatus = null;
      String currentStep = null;
      String email = null;
      email = tasktrBi.getOwner().getEmail();
      requester = tasktrBi.getOwner().getDisplayName();
      completionStatus = String.valueOf(tasktrBi.getCompletionStatus());
      if(requester != null) {
        WorkflowSummary wSummary = (WorkflowSummary) tasktrBi.getAttribute("workflowSummary");
        List objInteractions = wSummary.getInteractions();
        if(objInteractions != null) {
          WorkflowSummary.ApprovalSummary interaction = (WorkflowSummary.ApprovalSummary) objInteractions.get(objInteractions.size()-1);
          //for (WorkflowSummary.ApprovalSummary interaction : objInteractions) {
            String completer = null;
            Date requestedDate = null;
            String status = null;
            String state = null;
            String strRequestedDate = null;
            String errors = null;
            String request = interaction.getRequest();
            if (interaction.getRequest().equalsIgnoreCase("Manager Approval Form - Power BI Access Request raised by " + requester)) {
              completer = interaction.getCompleter();
              requestedDate = interaction.getStartDate();
              state = interaction.getState() == null ? "" : interaction.getState().name();
              errors = StringUtils.join(tasktrBi.getErrors(),",");
              currentStep = wSummary.getStep();
              table.addCell(new PdfPCell(new Paragraph(request, bodyFont)));
              table.addCell(new PdfPCell(new Paragraph(requester +" ("+email+")", bodyFont)));
              table.addCell(new PdfPCell(new Paragraph(completer, bodyFont)));
              strRequestedDate = formatter.format(requestedDate);
              table.addCell(new PdfPCell(new Paragraph(strRequestedDate, bodyFont)));
              if (completionStatus.equalsIgnoreCase("Success")) {
                table.addCell(new PdfPCell(new Paragraph("Success", successFont)));
                table.addCell(new PdfPCell(new Paragraph("",bodyFont)));
              }
              else if (completionStatus.equalsIgnoreCase("Error")) {
                table.addCell(new PdfPCell(new Paragraph("Failed", errorFont)));
                table.addCell(new PdfPCell(new Paragraph(errors,errorFont)));
              } else {
                table.addCell(new PdfPCell(new Paragraph(completionStatus, bodyFont)));
                table.addCell(new PdfPCell(new Paragraph("",bodyFont)));
              }
              table.addCell(new PdfPCell(new Paragraph(currentStep, bodyFont)));
              table.addCell(new PdfPCell(new Paragraph(state, bodyFont)));
            }
            if (interaction.getRequest().equalsIgnoreCase("Second Level Approval Form - Power BI Access Request raised by " + requester)) {
              completer = interaction.getCompleter();
              requestedDate = interaction.getStartDate();
              state = interaction.getState() == null ? "" : interaction.getState().name();
              errors = StringUtils.join(tasktrBi.getErrors(),",");
              currentStep = wSummary.getStep();
              table.addCell(new PdfPCell(new Paragraph(request, bodyFont)));
              table.addCell(new PdfPCell(new Paragraph(requester +" ("+email+")", bodyFont)));
              table.addCell(new PdfPCell(new Paragraph(completer, bodyFont)));
              strRequestedDate = formatter.format(requestedDate);
              table.addCell(new PdfPCell(new Paragraph(strRequestedDate, bodyFont)));
              if (completionStatus.equalsIgnoreCase("Success")) {
                table.addCell(new PdfPCell(new Paragraph("Success", successFont)));
                table.addCell(new PdfPCell(new Paragraph("",bodyFont)));
              }
              else if (completionStatus.equalsIgnoreCase("Error")) {
                table.addCell(new PdfPCell(new Paragraph("Failed", errorFont)));
                table.addCell(new PdfPCell(new Paragraph(errors,errorFont)));
              } else{
                table.addCell(new PdfPCell(new Paragraph(completionStatus, bodyFont)));
                table.addCell(new PdfPCell(new Paragraph("",bodyFont)));
              }
              table.addCell(new PdfPCell(new Paragraph(currentStep, bodyFont)));
              table.addCell(new PdfPCell(new Paragraph(state, bodyFont)));
            }
            if (interaction.getRequest().equalsIgnoreCase("Third Level Approval Form - Power BI Access Request raised by " + requester)) {
              completer = interaction.getCompleter();
              requestedDate = interaction.getStartDate();
              state = interaction.getState() == null ? "" : interaction.getState().name();
              errors = StringUtils.join(tasktrBi.getErrors(),",");
              currentStep = wSummary.getStep();
              table.addCell(new PdfPCell(new Paragraph(request, bodyFont)));
              table.addCell(new PdfPCell(new Paragraph(requester +" ("+email+")", bodyFont)));
              table.addCell(new PdfPCell(new Paragraph(completer, bodyFont)));
              strRequestedDate = formatter.format(requestedDate);
              table.addCell(new PdfPCell(new Paragraph(strRequestedDate, bodyFont)));
              if (completionStatus.equalsIgnoreCase("Success")) {
                table.addCell(new PdfPCell(new Paragraph("Success", successFont)));
                table.addCell(new PdfPCell(new Paragraph("",bodyFont)));
              }
              else if (completionStatus.equalsIgnoreCase("Error")) {
                table.addCell(new PdfPCell(new Paragraph("Failed", errorFont)));
                table.addCell(new PdfPCell(new Paragraph(errors,errorFont)));
              } else{
                table.addCell(new PdfPCell(new Paragraph(completionStatus, bodyFont)));
                table.addCell(new PdfPCell(new Paragraph("",bodyFont)));
              }
              table.addCell(new PdfPCell(new Paragraph(currentStep, bodyFont)));
              table.addCell(new PdfPCell(new Paragraph(state, bodyFont)));
            }
          //}
        }
      }
    }
  }
  document.add(table);
  document.add(Chunk.NEWLINE);
  Paragraph footer = new Paragraph("Power BI Access Request Report End", headingFont);
  footer.setAlignment(Paragraph.ALIGN_CENTER);
  document.add(footer);
  table.flushContent();
  document.close();
  EmailTemplate emailTemplate = context.getObjectByName(EmailTemplate.class,"Americana-Task-Status-Report-Notification");
  EmailOptions emailOptions = new EmailOptions();
  Map args = new HashMap();
  args.put("firstname","Binu");
  args.put("lastname","Varghese");
  args.put("reportdate",reportdate);
  emailOptions.setTo("binu.v@paramountassure.com");
  emailOptions.setVariables(args);
  String fileName = "PowerBIFailedTaskReport-"+reportdate+".pdf";
  byte[] fileData = java.nio.file.Files.readAllBytes(java.nio.file.Paths.get(filepath));
  //System.out.println("Data :"+fileData);
  EmailFileAttachment attachment = new EmailFileAttachment( fileName, EmailFileAttachment.MimeType.MIME_PDF, fileData );
  emailOptions.addAttachment( attachment );
  context.sendEmailNotification( emailTemplate, emailOptions );
  tskSuccess = "Success";
}catch (Exception e){
  throw  new RuntimeException(e);
}  
return tskSuccess;  
  </Source>
</Rule>

</sailpoint>