<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sailpoint PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<sailpoint>
<Rule language="beanshell" name="Americana-Rule-FieldValue-AD-co" type="FieldValue">
  <Description>This rule can be used to generate a field value (eg - an account name) using data from the given Identity. If this rule is run in the context of a workflow step then the arguments passed into the step will also be available. Also, any field values that have been processed so far from the policy related to the Application/Role will be available.</Description>
  <ReferencedRules>
    <Reference class="sailpoint.object.Rule" name="Americana-RuleLibrary-Attribute" />
  </ReferencedRules>
  <Signature returnType="String" />
  <Source>
  import sailpoint.object.Custom;
  import java.util.HashMap;
  String strContractor=null;
  String CountryName=null;
  String country = identity.getAttribute("country");
  strContractor=identity.getStringAttribute("ContractorCreation");
  if(strContractor!=null&amp;&amp;strContractor.equalsIgnoreCase("true")&amp;&amp;country!=null){
    Custom custom=context.getObjectByName(Custom.class,"Americana-Contractor-Attributes");
    if(custom!=null){
      log.error("inside custom not null if");
      Map map=new HashMap();
      map=custom.get("CountryNames");
      if(map!=null){
        CountryName=map.get(country);
      }
    }
    return CountryName;
  }
  if(country!=null &amp;&amp; country.equalsIgnoreCase("AE")){
    return "United Arab Emirates";
  }
  else if(country!=null &amp;&amp; country.equalsIgnoreCase("QA")){
    return "Qatar";		
  }
  else if(country!=null &amp;&amp; country.equalsIgnoreCase("KW")){
    return "Kuwait";		
  }
  else if(country!=null &amp;&amp; country.equalsIgnoreCase("BH")){
    return "Bahrain";		
  }
  else if(country!=null &amp;&amp; country.equalsIgnoreCase("LB")){
    return "Lebanon";		
  }
  else if(country!=null &amp;&amp; country.equalsIgnoreCase("MA")){
    return "Morocco";		
  }
  else if(country!=null &amp;&amp; country.equalsIgnoreCase("IN")){
    return "India";		
  }
  else if(country!=null &amp;&amp; country.equalsIgnoreCase("OM")){
    return "Oman";		
  }
  else if(country!=null &amp;&amp; country.equalsIgnoreCase("SA")){
    return "KSA";		
  }
  else if(country!=null &amp;&amp; country.equalsIgnoreCase("KZ")){
    return "Kazakhstan";		
  }
  else if(country!=null &amp;&amp; country.equalsIgnoreCase("IQ")){
    return "Iraq";		
  }
  else if(country!=null &amp;&amp; country.equalsIgnoreCase("EG")){
    return "Egypt";		
  }
  else if(country!=null &amp;&amp; country.equalsIgnoreCase("JO")){
    return "Jordan";		
  }
  return null;
  </Source>
</Rule>

</sailpoint>