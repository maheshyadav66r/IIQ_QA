<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sailpoint PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<sailpoint>
<Rule language="beanshell" name="Test-Provision-Rule">
  <Source>
  import sailpoint.api.SailPointContext;
  import sailpoint.api.IdentityService;
  import sailpoint.api.Provisioner;

  import sailpoint.object.Application;
  import sailpoint.object.Identity;
  import sailpoint.object.Link;
  import sailpoint.object.Custom;
  import sailpoint.object.Rule;
  import sailpoint.object.ProvisioningPlan;
  import sailpoint.object.ProvisioningPlan.AccountRequest;
  import sailpoint.object.ProvisioningPlan.AttributeRequest;
  import sailpoint.object.Workflow;

  import java.io.IOException;
  import java.io.InputStream;
  import java.net.HttpURLConnection;
  import java.net.URL;
  import java.util.Scanner;

  import sailpoint.object.ResourceObject;
  import java.text.SimpleDateFormat;
  import java.text.DateFormat;
  import sailpoint.tools.CloseableIterator;
  import sailpoint.tools.GeneralException;
  import sailpoint.tools.Util;
  import java.text.Normalizer;
  import java.text.Normalizer.Form;
  import sailpoint.object.EmailOptions;
  import sailpoint.object.EmailTemplate;
  import sailpoint.object.EmailFileAttachment;
  import java.io.File;
  import java.nio.file.Files;

  import sailpoint.connector.ADLDAPConnector;
  import sailpoint.connector.Connector;
  import sailpoint.connector.ConnectorException;
  import org.apache.commons.lang3.StringUtils;
  import org.apache.commons.logging.LogFactory;
  import org.apache.commons.logging.Log;

  Log log = LogFactory.getLog("americana.ruleLibrary.Attribute");
  log.trace("***RUNNING Americana-RuleLibrary-Attribute***");
  //return context.decrypt("1:ACP:5FbA9TcHnFj5NB/uiH5MaSEZgGVLWysXcfcTkEVW7P0=");

  String identityName = "11024680";
  String mail ="kwhrd14821@americana-food.com";

  log.trace("********Entered Test Provision Rule : "+identityName);
  ProvisioningPlan plan = null;

  if (Util.isNotNullOrEmpty(identityName)) {
    Identity identity = context.getObjectByName(Identity.class,identityName);
    if (identity == null) {
      log.error("Identity not found in the system :"+identityName);
      return plan;
    }
    plan = new ProvisioningPlan();
    plan.setIdentity(identity);
    /*AccountRequest acctReq = new AccountRequest();
    acctReq.setOperation(AccountRequest.Operation.Modify);
    acctReq.setApplication("Active Directory");
    acctReq.setNativeIdentity("");
    acctReq.add(new AttributeRequest("password",ProvisioningPlan.Operation.Set,"y_bSy1?t9ZU;"));
    plan.add(acctReq);
*/
    AccountRequest acctReqOracle = new AccountRequest();
    acctReqOracle.setOperation(AccountRequest.Operation.Modify);
    acctReqOracle.setApplication("Oracle Fusion HCM");
    List linksList = identity.getLinks();
    String nativeIdentity = "11024680";
    /*List assignedPlans = null;
    if(null != linksList){
      for(Link link : linksList){
        if(null != link){
          if("Azure AD".equalsIgnoreCase(link.getApplicationName())){
          	nativeIdentity = link.getNativeIdentity();
            assignedPlans =  link.getAttribute("assignedPlans");
          }
        }
      }
    }*/
    
          //acctReqOracle.add(new AttributeRequest("assignedPlans", ProvisioningPlan.Operation.Remove, assignedPlans));
    acctReqOracle.setNativeIdentity(nativeIdentity);
    acctReqOracle.add(new AttributeRequest("USER_NAME",ProvisioningPlan.Operation.Set,mail));
    acctReqOracle.add(new AttributeRequest("WORK_EMAIL",ProvisioningPlan.Operation.Set,mail));
    plan.add(acctReqOracle);
    
    

    Provisioner pro = new Provisioner(context);
    //pro.setNoCreateTemplates(true);
    //return pro.compile(plan);
    return pro.execute(plan);
  }
  </Source>
</Rule>

</sailpoint>