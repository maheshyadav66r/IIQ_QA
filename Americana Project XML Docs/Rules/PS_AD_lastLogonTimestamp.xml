<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sailpoint PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<sailpoint>
<Rule language="beanshell" name="PS_AD_lastLogonTimestamp" type="IdentityAttribute">
  <Description>Identity attribute rules are used when the value is not simply a copy of an application account attribute value.  A transformation may be necessary on the account attribute, or several account attributes may need to be combined to produce the identity attribute.

This rule can be called in two ways: as a global mapping rule and an application mapping rule.  A global mapping rule is called whenever the identity is refreshed.  The rule can look at any account attributes.  An application mapping rule is called only when the identity contains an account link for that application, this link is passed in the "link" argument which is not passed in global mapping rules.</Description>
  <Signature returnType="String" />
  <Source>import java.time.format.DateTimeFormatter;
		import java.util.Date;

		import sailpoint.object.ResourceObject;

		import java.time.LocalDate;
		import java.time.LocalDateTime;
		import java.text.SimpleDateFormat;


			
import org.apache.log4j.Logger;

Logger log=Logger.getLogger("customRule4");

	//String lastLogon=(String) link.getAttribute("lastLogon");
String lastLogonTimestamp=(String) link.getAttribute("LastLogonTimestamp");
		
log.info("lastLogon"+lastLogon);
log.info("lastLogonTimestamp"+lastLogonTimestamp);
		DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyyMMdd");
		LocalDate now = LocalDate.now(); //Gets the Current Date 
		
		
		long DIFF_FOR_DATE_AND_TIMES = 11644473600000L;

		if(lastLogonTimestamp!=null &amp;&amp;!(lastLogonTimestamp.equalsIgnoreCase("0")))
		{
log.debug("lastlogontimestamp is not null");
		long adDate = Long.parseLong(lastLogonTimestamp);
		log.debug("ad date"+adDate);
		long epochTime = ((adDate / 10000) - DIFF_FOR_DATE_AND_TIMES);
		log.debug("epochTime in stamp:"+epochTime);
		Date lastLogonDate = new Date(epochTime);
		log.debug("lastLogonDate in stamp :"+lastLogonDate);
		String formatDate = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'").format(lastLogonDate);
		log.debug("formatDate in stamp :"+formatDate);
		//LocalDate logon = LocalDate.parse(formatDate, formatter);

		log.info("logon"+logon);
log.info("thedate in stamp"+thedate);
		//log.info(attributeValue.getClass());
return formatDate;
		}</Source>
</Rule>

</sailpoint>