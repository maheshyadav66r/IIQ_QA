<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sailpoint PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<sailpoint>
<Rule language="beanshell" name="PS_getContractorDN_UserType_DisabledAD">
  <Source>
       import org.apache.log4j.Logger;

    import java.io.File;
    import java.util.ArrayList;
    import java.util.List;
    import java.util.Scanner;

  import sailpoint.object.EmailOptions;
import sailpoint.object.EmailTemplate;
  import sailpoint.object.Identity;
  import sailpoint.object.Link;

  Logger log = Logger.getLogger("customRule4");
  log.debug("PS_SendReminderEmails: **********Start**********");
  List identitiesWithContractorAD = new ArrayList();

  List emails = new ArrayList();
  try {
      //Use to send reminder emails to managers who have pending access reviews
      //String filename = "C:\\Program Files\\Apache Software Foundation\\Tomcat 9.0\\ApplicationFiles\\Certification\\managers_with_pending_reviews.csv";

      //Use to send certification initiation emails to managers for whom access reviews are created
      String filename = "C:\\Program Files\\Apache Software Foundation\\Tomcat 9.0\\logs\\cntrctrs.csv";

     // log.debug("PS_SendReminderEmails: Scanning emails...");
Scanner sc = new Scanner(new File(filename));
sc.useDelimiter("\r\n");
while (sc.hasNext()) {
String email = (String) sc.next();
        //log.debug("PS_SendReminderEmails: email: " + email);    
emails.add(email);
}
sc.close();
    //  log.debug("PS_SendReminderEmails: Email scanning complete.");
} catch (Exception e) {
// TODO: handle exception
      log.error("PS_SendReminderEmails: " + e.getMessage());
}
  //log.debug("PS_SendReminderEmails: emails: " + emails);

try {
      log.debug("PS_SendReminderEmails: Sending emails...");
for (Object obj1 : emails) {
String email = (String)obj1;

        log.debug("PS_SendReminderEmails: email/username: " + email);
Identity iden = context.getObjectByName(Identity.class, email);
        //log.debug("PS_SendReminderEmails: manager with that email: " + manager);
if (iden != null) {
String userType=iden.getAttribute("userType");
  
  
  
  
  List links=iden.getLinks();
    for(Link link:links)
    {

    if(link.getApplicationName().equalsIgnoreCase("Active Directory"))
    {
      Boolean linkstatus=link.isDisabled();

      if(linkstatus)
      {
    String linkname=link.getApplicationName();
    String linkdn=link.getAttribute("distinguishedName");
        String accountExpires=link.getAttribute("accountExpires");
    //String firstName=id.getAttribute("firstname");
        //String lastname=id.getAttribute("lastname");
         String userType=iden.getAttribute("userType");
       // Identity manager=id.getManager();
      	//log.error("manager :"+manager);
      //String  managerEmail="";
     // if(manager!=null){
       //  managerEmail=manager.getAttribute("email");
      //}

        //	String idemail=id.getAttribute("email");
      log.error("idemail "+idemail);

 
String info=userType+","+accountExpires+","+"\""+linkdn+"\"";
        
        log.error("info: "+info);
       // String info=userType+","+accountExpires;
            identitiesWithContractorAD.add(info);



    }
    }
}
  
  
  
  
  
log.info("peopleGroup...:"+userType);

}
  
       
  
  
  
  
  
}
  if (!identitiesWithContractorAD.isEmpty()) {
       FileWriter writer = new FileWriter("C:\\Program Files\\Apache Software Foundation\\Tomcat 9.0\\logs\\manager5.csv", true);
        for (String info : identitiesWithContractorAD) {
            writer.write(info + "\n");
        }
        writer.close();
    }  
} catch (Exception e) {
// TODO: handle exception
      log.error("PS_SendReminderEmails: " + e.getMessage());
}
 
        
</Source>
</Rule>

</sailpoint>