<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sailpoint PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<sailpoint>
<Rule language="beanshell" name="AzureMobileCorrelation_Rule" type="Correlation">
  <Description>Identity Correlation Rules are used to find identities to which new accounts can be attached.

A correlation rule must return a Map with one of the specified Return arguments.</Description>
  <Signature returnType="Map">
    <Inputs>
      <Argument name="log" type="org.apache.commons.logging.Log">
        <Description>
          The log object associated with the SailPointContext.
        </Description>
      </Argument>
      <Argument name="context" type="sailpoint.api.SailPointContext">
        <Description>
          A sailpoint.api.SailPointContext object that can be used to query the database if necessary.
        </Description>
      </Argument>
      <Argument name="environment" type="Map">
        <Description>
          Arguments passed to the aggregation task.
        </Description>
      </Argument>
      <Argument name="application">
        <Description>
          Application being aggregated.
        </Description>
      </Argument>
      <Argument name="account">
        <Description>
          A sailpoint.object.ResourceObject returned from the
          collector.
        </Description>
      </Argument>
      <Argument name="link">
        <Description>
          Existing link to this account.
        </Description>
      </Argument>
    </Inputs>
    <Returns>
      <Argument name="identityName">
        <Description>
          
        </Description>
      </Argument>
      <Argument name="identity">
        <Description>
          A fully resolved Identity object if the rule wants
          to do its own queries to locate the identity.
        </Description>
      </Argument>
      <Argument name="identityAttributeName">
        <Description>
          The name of the extended attribute that can be used
          to locate an existing identity.
        </Description>
      </Argument>
      <Argument name="identityAttributeValue">
        <Description>
          The value of the named extended attribute that can be used
          to locate an existing identity. This attribute is used
          together with the identityAttributeName argument.
        </Description>
      </Argument>
    </Returns>
  </Signature>
  <Source>import sailpoint.object.Identity;
  import sailpoint.object.QueryOptions;
  import sailpoint.object.Filter;
  import sailpoint.object.Link;
  import java.util.Iterator;
  import java.util.ArrayList;
  import java.util.HashMap;
  String strApplicationName=null;
  
  Map returnMap = new HashMap();
String accountemail = account.getStringAttribute("PrimarySMTP");
//String lastname = account.getStringAttribute("lastname");
if ( ( accountemail != null ) ) {
 QueryOptions qo = new QueryOptions();
  Filter f1 = Filter.eq("email",accountemail);
  qo.addFilter(f1);
  Iterator iterator = context.search(Identity.class,qo);          
      if(iterator != null &amp;&amp; iterator.hasNext()){

        Identity identity = iterator.next();
        if(identity!=null){
          List linkslist = new ArrayList();
          linkslist=identity.getLinks();
        Iterator linksDelIterator = linkslist.iterator();
        while(linksDelIterator.hasNext()){

          Link accounts = (Link) linksDelIterator.next();
          strApplicationName=accounts.getApplicationName(); 
          log.error("application name::::"+strApplicationName);
         // strApplicationType=accounts.getApplication().getType();              
          //strAccountName=accounts.getNativeIdentity();
if(strApplicationName!=null&amp;&amp;(strApplicationName.equalsIgnoreCase("Active Directory")||strApplicationName.equalsIgnoreCase("AD Contractors"))){
  String username=identity.getName();
  returnMap.put("identityName", username);
}
        }
        }
      }
}
return returnMap;
  </Source>
</Rule>

</sailpoint>