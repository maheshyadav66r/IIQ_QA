<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sailpoint PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<sailpoint>
<Rule language="beanshell" name="Americana-CrunchTime-custamization rule" type="ResourceObjectCustomization">
  <Description>This rule is configured on the application and is called after the connector has build a ResourceObject from the native application data.

    Initially designed for non-rule based connectors to add SPPrivileged flag to an object, but could be used to do any transformations.</Description>
  <Signature returnType="ResourceObject">
    <Inputs>
      <Argument name="log" type="org.apache.commons.logging.Log">
        <Description>
          The log object associated with the SailPointContext.
        </Description>
      </Argument>
      <Argument name="context" type="sailpoint.api.SailPointContext">
        <Description>
          A sailpoint.api.SailPointContext object that can be used to query the database if necessary.
        </Description>
      </Argument>
      <Argument name="object">
        <Description>
          The ResourceObject built by the connector.
        </Description>
      </Argument>
      <Argument name="application">
        <Description>
          Application that references the connector.
        </Description>
      </Argument>
      <Argument name="connector">
        <Description>
          The connector object.
        </Description>
      </Argument>
      <Argument name="state">
        <Description>
          A Map containing state information.
        </Description>
      </Argument>
    </Inputs>
    <Returns>
      <Argument name="resourceObject">
        <Description>
          The updated resource object.
        </Description>
      </Argument>
    </Returns>
  </Signature>
  <Source>import sailpoint.tools.Util;
  if(object.getObjectType()!= null @and object.getObjectType().equalsIgnoreCase("account")){
    List templist = new ArrayList();
    templist.add("CONCEPT_CODE");
    templist.add("MARKET_NAME");
    for(String str:templist){

      List g1 = (List)object.getAttribute(str);

      if (g1!= null @and g1 instanceof List) {  

        Set newset = new HashSet();

        if (Util.nullSafeSize(g1 ) &gt; 0) {
          for (String group : g1 ) {

            if(group.startsWith("\"")) group = group.substring(1);

            if(group.endsWith("\"")) group = group.substring(0,group.length()-1);

            if (group.contains(",")) {
              List groupList = Util.csvToList(group);
              String[] mName = group.split(",");

              List maName = Arrays.asList(mName);
              for(String a:maName){
                newset.add(a);
              }
            }else{
              newset.add(group);
            }

          }
        }
        if (newset!= null) {

          List list = new ArrayList(newset);
          object.put(str,list);
        }
      }
    }


  }



  return object;</Source>
</Rule>

</sailpoint>