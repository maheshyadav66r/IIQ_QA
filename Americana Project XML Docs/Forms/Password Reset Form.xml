<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sailpoint PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<sailpoint>
<Form name="Password Reset Form" type="Workflow">
  <Attributes>
    <Map>
      <entry key="pageTitle" value="Password Reset" />
    </Map>
  </Attributes>
  <Section label="Select User to reset the password">
    <Field columnSpan="2" displayName="Slect User" displayType="comboBox" name="user" postBack="true" required="true" type="sailpoint.object.Identity" />
    <Field columnSpan="2" displayName="Verification Code" hidden="true" name="vcode" postBack="true" type="string">
      <Script>
        <Includes>
          <Reference class="sailpoint.object.Rule" name="Americana-SendSMS-Rule" />
        </Includes>
        <Source>
		import org.apache.log4j.Logger;
          import sailpoint.object.Identity;
		   String password = null;  
  String pin=null;
  PasswordPolicy policy = null;
  try{
  if(requester!=null){
  log.error("requester is"+requester);
    policy = context.getObjectByName(PasswordPolicy.class,"Americana-AD-HelpDeskpinverificationPolicy");
    if(policy!=null){

      password = new PasswordGenerator(context).generatePassword(policy);
      // return password;
      if(password!=null){
String response=sendSMS(requester,password);
    return password;    

      }
    }
}
  }catch(Exception e){

  }
  
          
		</Source>
      </Script>
    </Field>
    <Field columnSpan="2" displayName="HelpDesk User Pin" helpKey="HelpDesk user must enter their verification pin to reset the password" name="pin" postBack="true" required="true" type="string">
      <ValidationScript>
        <Source>
          import org.apache.log4j.Logger;
          import sailpoint.object.Identity;
         
          String strpin = form.getField("pin").getValue();
		    String vpin = form.getField("vcode").getValue();
if(strpin==null||vpin==null){
return "please enter valid pin";
}
          if(strpin!=null&amp;&amp;vpin!=null){
          if(!strpin.equalsIgnoreCase(vpin)){

          return("Please enter a valid pin "); 
          }          
          }  
	
	  
        </Source>
      </ValidationScript>
    </Field>
  </Section>
  <Section>
    <Attributes>
      <Map>
        <entry key="hidden">
          <value>
            <Script>
              <Source>
                if ( user !=null&amp;&amp;pin!=null ) {

                return false;
                }
                return true;
              </Source>
            </Script>
          </value>
        </entry>
      </Map>
    </Attributes>
    <Field columnSpan="1" displayName="sAMAccountName" dynamic="true" name="sAMAccountName" readOnly="true" type="String">
      <Script>
        <Source>
          import sailpoint.object.Identity;
          import sailpoint.api.Provisioner;
          import sailpoint.connector.Connector; 
          import sailpoint.api.ObjectUtil;
          import org.apache.log4j.Logger;
          import sailpoint.object.Link;

          List links = null;
          String sName =null;

          String name=null;
          Identity identity=null;


          try{

          log.error(" - Start");
          if(null != username){

          name = form.getField("user").getValue();
          log.error("name is"+name);
          identity = context.getObjectByName(Identity.class,name);
          if(identity!= null){
          log.error("inside if");

          links = identity.getLinks();
          if(links != null &amp;&amp; links.size()&gt; 0) {

          for(Link link : links) {

          String applicationName = link.getApplicationName();
          if(applicationName != null &amp;&amp; ( applicationName.equalsIgnoreCase("Active Directory")||applicationName.equalsIgnoreCase("AD Contractors"))){
          log.error("inside ad loop");
          sName = (String)link.getAttribute("sAMAccountName");
          log.error("sam accoiunt name is"+sName);
          //  return sName;
          break;
          }
          }
          return sName;
          }        	        
          }

          } 
          return sName;
          }catch(Exception e){

          logger.error("Exception= "+e.printStackTrace());          
          throw e;
          }
          //  return "c.samaccountname";

        </Source>
      </Script>
    </Field>
    <Field columnSpan="1" displayName="New Password" name="newpassword" postBack="true" required="true" type="String">
      <Attributes>
        <Map>
          <entry key="hidden">
            <value>
              <Script>
                <Source>
                  if (sAMAccountName !=null) {

                  return false;
                  }
                  return true;
                </Source>
              </Script>
            </value>
          </entry>
        </Map>
      </Attributes>
      <Script>
        <Source>
          import sailpoint.api.PasswordGenerator;
          import sailpoint.object.PasswordPolicy;
          import sailpoint.object.Identity;


          String password = null;  	
          PasswordPolicy policy = null;

          try{


          policy = context.getObjectByName(PasswordPolicy.class,"Americana-AD-PasswordPolicy");
          if(policy!=null){

          password = new PasswordGenerator(context).generatePassword(policy);
          if(password!=null){

          password=password.replaceAll("\\s", ""); 
          identity.setPassword(password);
          context.saveObject(identity);
          context.commitTransaction();
          }
          }

          }catch(Exception e){

          }

          return password;
        </Source>
      </Script>
    </Field>
  </Section>
  <Button action="next" label="OK" />
  <Button action="cancel" label="Cancel" />
</Form>

</sailpoint>