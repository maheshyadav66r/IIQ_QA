<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sailpoint PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<sailpoint>
<Form name="Password Reset Form-Choose User" type="Workflow">
  <Attributes>
    <Map>
      <entry key="pageTitle" value="Password Reset" />
    </Map>
  </Attributes>
  <Section label="Select User to reset the password">
    <Field columnSpan="2" displayName="Select User" displayType="comboBox" name="user" postBack="true" required="true" type="sailpoint.object.Identity">
      <Script>
        <Source>
      		import sailpoint.object.Identity;
          import sailpoint.object.Custom;
          import sailpoint.object.Field;
          import sailpoint.object.Custom;
          import java.util.List;
          import sailpoint.object.Filter;
          
          
          
          if(null != launcher){
          	Identity launcherCube = context.getObjectByName(Identity.class,launcher);
          	Custom customObject = context.getObjectByName(Custom.class,"Americana-Help Desk Password Custom");
          	if(null != launcherCube @and null != customobject){
          		String email = launcherCube.getStringAttribute("email");
          		if(null != email @and !"".equalsIgnoreCase(email)){
          			List rtTeamList = customObject.get("rtTeam");
          			List itTeamList = customObject.get("itTeam");
          			if(null != rtTeamList @and rtTeamList.size() &gt; 0 @and rtTeamList.contains(email)){
          				Filter filter = Filter.like("distinguishedName","OU=Chains");
          				Filter peopleGroupFilter = Filter.eq("peopleGroup","Store Level");
          				Filter orFilter = Filter.or(filter,peopleGroupFilter);
          				field.setFilterString(orFilter.toString());
          			}else if(null != itTeamList @and itTeamList.size() &gt; 0 @and !itTeamList.contains(email)){
          				Filter filter = Filter.eq("name",launcher);
          				field.setFilterString(filter.toString());	
          			}
          		}else{
          			Filter filter = Filter.eq("name",launcher);
          			field.setFilterString(filter.toString());
          		}
          	}else{
          		Filter filter = Filter.eq("name",launcher);
          		field.setFilterString(filter.toString());
          	}
          }
          
          return field.getValue();
        </Source>
      </Script>
    </Field>
    <Field columnSpan="2" displayName="Choose AD Account" displayType="combobox" dynamic="true" name="adAccount" postBack="true" required="true" type="string">
      <Attributes>
        <Map>
          <entry key="hidden">
            <value>
              <Script>
                <Source>
                	if(null != user){
                  	return false;
                  }else{
                  	return true;
                  }
                </Source>
              </Script>
            </value>
          </entry>
        </Map>
      </Attributes>
      <Script>
        <Source>
      		import sailpoint.object.Identity;
          import sailpoint.object.Filter;
          import sailpoint.object.Application;
          import sailpoint.object.Link;
          import sailpoint.api.IdentityService;
          import java.util.List;
          import java.util.ArrayList;
          
          
          if(null != form.getField("user") @and null != form.getField("user").getValue()){
          	Identity identityObject = context.getObjectByName(Identity.class,form.getField("user").getValue());
          	if(null != identityObject){
          		Application adApplication = context.getObjectByName(Application.class,"Active Directory");
          		Application contractorAD = context.getObjectByName(Application.class,"AD Contractors");
          		
          		List appsList = new ArrayList();
          		appsList.add(adApplication);
          		appsList.add(contractorAD);
          		IdentityService identityService = new IdentityService(context);
          		List links = identityService.getLinks(identityObject,appsList,null);
          System.out.println("links list "+links);
          if(null != links @and links.size() == 1){
          	Link linkObject = links.get(0);			
          	if(null != linkObject){
          		if(null != linkObject.getAttribute("sAMAccountName")){
          			field.setValue(linkObject.getAttribute("sAMAccountName"));
          			field.setReadOnly(true);
          		}
          	}
         	}else if(null != links @and links.size() &gt; 1){
          	field.setDisplayType("label");
          	field.setRequired(false);
          	field.setDisplayName("Multiple AD Accounts Found For the User");
          }else{
          			field.setDisplayType("label");
          field.setRequired(false);
          			field.setDisplayName("No AD Accounts Found For the User");
          		}
          	}
          	
          
          }
          return field.getValue();
        </Source>
      </Script>
    </Field>
  </Section>
  <Section type="datatable">
    <Field>
      <Attributes>
        <Map>
          <entry key="contentIsEscaped" value="true" />
          <entry key="hidden">
            <value>
              <Script>
                <Source>
          	if(null != user){
                  	return false;
                  }else{
                  	return true;
                  }
                  </Source>
              </Script>
            </value>
          </entry>
        </Map>
      </Attributes>
      <Script>
        <Source>
         	return "&lt;p style=\"color:red;\"&gt;On clicking generate password, Please note that a new password would be generated and would be provisioned to the Active Directory. Hence, please wait patiently until you see the screen with new password.&lt;/p&gt;";
        </Source>
      </Script>
    </Field>
  </Section>
  <Button action="next" label="Generate Password" />
  <Button action="cancel" label="Cancel" />
</Form>

</sailpoint>