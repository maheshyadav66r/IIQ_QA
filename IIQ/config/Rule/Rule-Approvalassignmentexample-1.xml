<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="ApprovalAssignmentExample-1" type="ApprovalAssignment">
          
    
    <Signature returnType="null">
                    
        
        <Inputs>
                              
            
            <Argument type="log">
                                        
                
                <Description>

          The log object associated with the SailPointContext.

        </Description>
                                      
            
            </Argument>
                              
            
            <Argument type="context">
                                        
                
                <Description>

          A sailpoint.api.SailPointContext object that can be used to query the database if necessary.

        </Description>
                                      
            
            </Argument>
                              
            
            <Argument type="approvals">
                                        
                
                <Description>

          List of approvals generated by the approvalScheme, maybe null if there were no

          approvals enabled.

        </Description>
                                      
            
            </Argument>
                              
            
            <Argument type="approvalSet">
                                        
                
                <Description>

          Representation of the cart, also found on the approvals generated by the

          default schemes.

        </Description>
                                      
            
            </Argument>
                            
        
        </Inputs>
                    
        
        <Returns>
                              
            
            <Argument type="newApprovals">
                                        
                
                <Description>

          Return a lIst of Workflow.Approval objects that should be included

          during the approval process.

        </Description>
                                      
            
            </Argument>
                            
        
        </Returns>
                  
    
    </Signature>
          
    
    <Source><![CDATA[
  import sailpoint.object.Filter;
  import sailpoint.api.*;
  import sailpoint.object.Application;
  import sailpoint.object.ApprovalSet;
  import sailpoint.object.ApprovalItem;
  import sailpoint.object.Identity;
  import sailpoint.object.ManagedAttribute;
  import sailpoint.object.Workflow.Approval;
  import sailpoint.object.Workflow.Arg;
  import sailpoint.tools.xml.XMLObjectFactory;
  import sailpoint.workflow.IdentityApprovalGenerator;

  List newApprovals = new ArrayList();
  String managerName = null;

  Identity identityObj = context.getObjectByName(Identity.class, identityName);

  Map approvalMap = new HashMap();
  int count =0;
  // Iterate through the ApprovalItems and generate a new ApprovalSet for this approval

  for (ApprovalItem item : approvalSet.getItems()) {
    String itemOwner = "";

    if(item.getApplicationName() != null && item.getApplicationName().equals("JDBC")){
      Filter f = Filter.and(Filter.eq("displayName",item.getDisplayValue()),Filter.eq("attribute","GroupId"));
      ManagedAttribute mat = context.getUniqueObject(ManagedAttribute.class, f);
      if(mat.getOwner() == null){
        item.setOwner("spadmin");
      }else{
        item.setOwner(mat.getOwner().getName());
      }

      itemOwner = item.getOwner();
    }
    
    if (! item.isRejected()) {

      Object itemValueObj =  item.getValue();
      System.out.println("Approval item value Object: "+itemValueObj);

        ApprovalSet newSet = new ApprovalSet();
        newSet.add(XMLObjectFactory.getInstance().clone(item, context));
        approvalMap.put("Dawn Oliver", newSet);
    }
  }
  // Generate the approval list from the approval map

  IdentityApprovalGenerator iag = new IdentityApprovalGenerator(wfcontext);

  newApprovals = iag.buildApprovalsFromMap(approvalMap, "Approver");  // Second argument is used in the work item description

  System.out.println("Ending : ---->"+approvalMap);
  System.out.println("Ending : ---->"+newApprovals);
  return newApprovals;
  ]]></Source>
        

</Rule>
