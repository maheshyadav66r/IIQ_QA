<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="Validation DateConfig Rule For 15days Trigger" significantModified="1738233411649" type="Validation">
          
    
    <Description>This rule can be used for Certification Events that use rule triggers. The previousIdentity and newIdentity hold snapshots of the identity before the update has occurred and the state of the identity after the update, respectively.</Description>
          
    
    <Source><![CDATA[
  import java.text.SimpleDateFormat;
  import java.util.Date;
  import java.util.Calendar;
  import sailpoint.tools.Util;
  import sailpoint.object.*;



  File file=new File("D:\csv files\Groups");

  if (file.exists()) {
    file.createNewFile();
  }

  public  void writeObjectToFile(ManagedAttribute ma, File file) throws IOException {
    try (FileOutputStream fos = new FileOutputStream(file);
         ObjectOutputStream oos = new ObjectOutputStream(fos)) {
      oos.writeObject(obj);
      oos.flush();
    }
  }











  Identity newIdentity=context.getObjectByName(Identity.class,"Vijay Shankar");

  String joiningDate=newIdentity.getStringAttribute("joiningDate");
  log.error("-----joiningDate from identity----"+joiningDate);
  log.error("-----newIdentity from sp----"+newIdentity.toXml());

  SimpleDateFormat sdf=new SimpleDateFormat("dd-MM-yyyy");
  log.error("-----SimpleDateFormat format----"+sdf);

  Date jod=sdf.parse(joiningDate);
  log.error("-----parse(joiningDate)----"+jod);

  Calendar calendar = Calendar.getInstance();
  calendar.setTime(jod);
  calendar.add(Calendar.DAY_OF_YEAR, -15);
  Date startDate = calendar.getTime();
  log.error("----- startDate----"+startDate);


  Date currentDate=new Date();
  log.error("----- currentDate----"+currentDate);

  boolean currentDateCheck=Util.isDateBetween(currentDate,startDate,jod);
  log.error("----- currentDateCheck boolean value----"+currentDateCheck);
  return currentDateCheck;]]></Source>
        

</Rule>
