<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="Pre-iterator For Role" significantModified="1740069340057" type="PreIterate">
          
    
    <Description>This rule is called before the connector processes the data in a file.</Description>
          
    
    <Signature returnType="void"/>
          
    
    <Source><![CDATA[import java.io.File;
  import java.io.FileInputStream;
  import java.io.FileNotFoundException;
  import java.io.IOException;
  import java.io.PrintWriter;
  import java.text.DateFormat;
  import java.text.SimpleDateFormat;
  import java.util.Date;
  import java.util.Iterator;
  import org.apache.poi.ss.usermodel.*;
  import org.apache.poi.ss.usermodel.Cell;
  import org.apache.poi.ss.usermodel.CellType;
  import org.apache.poi.ss.usermodel.Row;
  import org.apache.poi.ss.usermodel.Sheet;
  import org.apache.poi.ss.usermodel.Workbook;
  import org.apache.poi.ss.usermodel.WorkbookFactory;
  import org.apache.poi.xssf.usermodel.XSSFSheet;
  import org.apache.poi.xssf.usermodel.XSSFWorkbook;
  import org.apache.poi.hssf.usermodel.HSSFWorkbook;
  import org.apache.commons.logging.Log;
  import org.apache.commons.logging.LogFactory;
  import org.apache.commons.io.FilenameUtils;
  import sailpoint.tools.Util;
  import sailpoint.object.Custom;
  import sailpoint.tools.GeneralException;
  import sailpoint.object.Attributes;

  Attributes attributes = application.getAttributes();

  String rootPath=null;
  String fileName=null;



log.error("Pre - iterator---IC-");
  // Get the list of files in the directory
  // String dirPath = "D:\\Applications\\Sailpoint";
  // String inputFile = application.getAttributeValue("file");
  //  log.error("inputFile-===========" +inputFile);



  String INPUT_FILEPATH_LOCATION = application.getAttributeValue("file");
  /*  String OUTPUT_FILEPATH_LOCATION = stats.get("absolutePath");
  String ARCHIVE_FILEPATH_LOCATION = svbCustomObj.get("archiveFilePath");
  String OUTPUT_FILE_NAME_SP = stats.get("fileName");*/




  // For storing data into CSV files
  StringBuffer data = new StringBuffer();
  FileInputStream fileInput = null;
  Workbook wb = null;

  try {

    fileInput = new FileInputStream(INPUT_FILEPATH_LOCATION);

    // Get the workbook instance for XLSX file

    wb = new XSSFWorkbook(fileInput);

    if(null != wb) {
      // Get first sheet from the workbook
      Sheet sheet = wb.getSheetAt(0);

      if(null != sheet) {
        // Iterate through each rows from first sheet
        Row rowObj = null;

        for (int i = 0; i <= sheet.getLastRowNum(); i++) {
          rowObj = sheet.getRow(i);

          for (int j = 0; rowObj !=null && j < rowObj.getLastCellNum(); j++) {
            if(j > 0){
              data.append(",");
            }

            data.append("\"" + (rowObj.getCell(j)!=null?rowObj.getCell(j):"") + "\"");

          }

          data.append("\n");

        }
      }
    }
  } catch (FileNotFoundException fileNotFound) {

    svbLog.error("Input file not found. Exception : " + fileNotFound.getMessage());

  }  finally {

    if(null != fileInput){

      try {

        fileInput.close();

      } catch (IOException ioException) {

        svbLog.error("I/O Exception : " + ioException.getMessage());

      }
    }

    if(null != wb){

      try {

        wb.close();

      } catch (IOException ioException) {

        svbLog.error("I/O Exception : " + ioException.getMessage());

      }
    }
  }
  log.error("data from xl file ---"+data.toString);
  return data;




  /* File[] files = directory1.listFiles();
  log.error("files=======" + files);
  if (files != null) {
     System.out.println("Files found in " + files + ":");
    SimpleDateFormat dateFormat = new SimpleDateFormat("yyyyMMdd");
    for (File file : files) {
      if (file.isFile()) {
        System.out.println("File Names are==========="+ file.getName());
        fileName = file.getName();
        int lastIndex = fileName.lastIndexOf('_');
        if (lastIndex != -1) {
          String datePart = fileName.substring(lastIndex + 1, fileName.lastIndexOf('.'));
          dateStrings.add(datePart);
        }
      }
    }

    List dates = new ArrayList();

    for (dateString : dateStrings) {
      date = dateFormat.parse(dateString);
      dates.add(date);
    }


    latestDate = Collections.max(dates);
    String  latestDateStr = dateFormat.format(latestDate);
    log.error("Latest date: " + latestDateStr);

    rootPath = parent + "\\" + fileName.split("")[0] + "" + latestDateStr + ".csv";

  } else {
    System.out.println("No files found in the directory.");
  }
  //sailpoint.tools.Util.copyFile(dirPath,rootPath);
  // String output = "FullName,GivenName,Surname,Department,EmployeeID,EmailID,NetworkID,manager,end_Date";
  attributes.put("file",rootPath);

  log.error("Application Xml " +application.toXml()); 
  // log.error("final root Path ======" + rootPath);
  //return new ByteArrayInputStream(rootPath.getBytes());

  return new BufferedInputStream(new FileInputStream(new File(rootPath)));*/]]></Source>
        

</Rule>
